
//------------------------------------------------------------------------
/*
JavaScript 的核心语法部分相当精简，只包括两个部分：基本的语法构造（比如操作符、控制结构、语句）
和标准库（就是一系列具有各种功能的对象比如Array、Date、Math等）。
除此之外，各种宿主环境还会提供额外的 API（即只能在该环境使用的接口），
以便 JavaScript 调用。

以浏览器为例，它提供的额外 API 可以分成三大类:
浏览器控制类：操作浏览器
DOM 类：操作网页的各种元素
Web 类：实现互联网的各种功能

如果宿主环境是服务器Node环境，
则会提供各种操作系统的 API:
比如文件操作 API、网络通信 API等等。
*/
//-------------------------------------------------------------------------
/*
数值、字符串、布尔值这三种类型，合称为原始类型（primitive type）的值，
即它们是最基本的数据类型，不能再细分了。
对象则称为合成类型（complex type）的值，
因为一个对象往往是多个原始类型的值的合成，
可以看作是一个存放各种值的容器。
至于undefined和null，一般将它们看成两个特殊值。
 */

//---------------------------------------------------------------------------
/*
三种方法，可以确定一个值到底是什么类型。

typeof运算符  if (typeof v === "undefined") {
                   // ...
               }

instanceof运算符
Object.prototype.toString方法
 */
//-------------------------------------------------------------------------
/*
NaN不是独立的数据类型，而是一个特殊数值，它的数据类型依然属于Number;

null是一个表示“空”的对象，转为数值时为0;

undefined是一个表示”此处无定义”的原始值，转为数值时为NaN:

// 变量声明了，但没有赋值
var i;
i // undefined

// 调用函数时，应该提供的参数没有提供，该参数等于 undefined
function f(x) {
  return x;
}
f() // undefined

// 对象没有赋值的属性
var  o = new Object();
o.p // undefined

// 函数没有返回值时，默认返回 undefined
function f() {}
f() // undefined

 */